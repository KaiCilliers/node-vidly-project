Object ID:
    - _id: 5d39cdb00edbb02e5025678d
    - 12 bytes for the ID
        - first 4 bytes: timestamp
            - no need for a 'created at' field in DB
        - next 3 bytes: machine identifier
            - two different machines will have two different indentifiers
        - next 2 bytes: process identifier
            - if you generate the same object ID on the same machine, but with different processes, the 2 bytes will differ
        - last 3 bytes: counter
            - if you create an object id on the same machine, same process,
            same timestamp, but generate two different documents,
            the counter will differ
        - these 12 bytes uniquely identify a document in mongoDB
        - you can generate the same id for two documents
            - 1 byte = 8 bits
            - 2 ^ 8 = 256 combinations
            - counter = 3 bytes = 2 ^ 24 = 16Million
            - if you generate more than 16M documents on the same machine, process, at the same timestamp
            then the counter will overflow and you will get the same ID for two documents
Authentication:
    - Process of identifying if the user is who they say they are (username/password)
    - Server authenticates user
Authorisation:
    - Determine if user has right permission to perform an operation
Try to use this for password requirements
    - joi-password-complexity
lodash
    - simply makes object manipulation easier
JSON Web Token
    - Allows you to authenticate once
    - then receive an ID (like a driver's license)
    - called a JWT than you can use next time you use the server's API
    - Mobile apps have something similar (depending on platform)
custom-environment-varaibles.json file name is important to be spelt like that
setting env varaibles:
    - $env:myname="value"
    - getting it: $env:myname
Information Expert Principle
    - almost like single-responsibility concept
FATAL ERROR: jwtPrivateKey is not defined
    - $env:vidly_jwtPrivateKey="mySecureKey"
Winston Transports: 
    - level: process.env.ENV === 'development' ? 'debug' : 'error'
    -   // If we're not in production then log to the `console` with the format:
        // `${info.level}: ${info.message} JSON.stringify({ ...rest }) `
        // 
        if (process.env.NODE_ENV !== 'production') {
            logger.add(new winston.transports.Console({
                format: winston.format.simple()
            }));
        }

ENVIRONMENT VARIABLES to setting
    - NODE_ENV
        - production
        - test
        - development
    - vidly_jwtPrivateKey
        - mySecureKey

Two types of methods
    - Static
        - Methods available directly on a class
        - Like, Rental.lookup
    - Instance
        - Methods avaialbe on an object/instance of a class
        - Like, new User().generateAuthToken()
        - a result of method is depended on the object